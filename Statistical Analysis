 --Q4-.Given File 'titanic.csv'

From the dataset, find the mean age of the people who did not survive.

In the dataset,

For Survived = 0 means the passenger has not survived.

For Survived = 1 means the passenger has survived.

import pandas as pd

# Read the Titanic dataset from the CSV file
titanic_data = pd.read_csv('titanic.csv')

# Filter the data for passengers who did not survive (Survived = 0)
not_survived_data = titanic_data[titanic_data['Survived'] == 0]

# Calculate the mean age of people who did not survive
mean_age_not_survived = round(not_survived_data['Age'].mean(),2)

# Print the mean rounded off to two decimal places
print(mean_age_not_survived)


--Q2-.Given File 'titanic.csv'

From the dataset, find the following:

1. Percentage of Passengers Survived.
2. Of the total survived passengers what percentage are the male passengers.
3. Of the total survived passengers what percentage are the female passengers.
In the dataset,

For Survived = 0 means the passenger has not survived.

For Survived = 1 means the passenger has survived.

For Sex = 1 means the passenger is male.

For Sex = 0 means the passenger is Female.

import pandas as pd

# Read the titanic.csv file into a DataFrame
df = pd.read_csv("titanic.csv")

# Calculate the total number of passengers
total_passengers = len(df)

# Calculate the number of passengers who survived
survived_passengers = len(df[df["Survived"] == 1])

# Calculate the percentage of passengers who survived
percentage_survived = round((survived_passengers / total_passengers) * 100, 2)

# Filter the DataFrame by the Survived and Sex columns
df_survived_male = df[(df["Survived"] == 1) & (df["Sex"] == 1)]
df_survived_female = df[(df["Survived"] == 1) & (df["Sex"] == 0)]

# Calculate the number of male and female passengers who survived
survived_male = len(df_survived_male)
survived_female = len(df_survived_female)

# Calculate the percentage of male and female passengers who survived
percentage_survived_male = round((survived_male / survived_passengers) * 100, 2)
percentage_survived_female = round((survived_female / survived_passengers) * 100, 2)

# Print the percentages
print(percentage_survived)
print(percentage_survived_male)
print(percentage_survived_female)

--Q3-.Given File 'titanic.csv'

From the dataset, find the variable having the highest correlation with the Survival rate.

Note: Survival rate is denoted by the "Survived" column.
Output Format:

Print the column name having the highest correlation with the Survived column.
Print the absolute value of the correlation of this column rounded off to two decimal places.
These values should be separated by a new line.

import pandas as pd

df = pd.read_csv('titanic.csv')

correlations = df.corr()['Survived'].abs()

correlations = correlations.drop('Survived')

highest_correlation_column = correlations.idxmax()
highest_correlation_value = correlations[highest_correlation_column]

print(highest_correlation_column)
print("{:.2f}".format(highest_correlation_value))

--Q4-.Given File 'titanic.csv'

From the dataset, Calculate the IQR for the Age column.

In the dataset, there are some null values present for the Age column. First, remove those and then calculate the IQR.

import pandas as pd
import numpy as np
import statistics
df = pd.read_csv('titanic.csv')
a=df['Age'].dropna()
b = np.quantile([a],0.25,interpolation = 'midpoint')
d = np.quantile([a],0.75,interpolation = 'midpoint')
c = d - b
print(round(c,2))

--Q4-.Given File 'titanic.csv'

From the dataset, find out if there is a significant difference in the mean sex between the passenger who survived and the passenger who did not survive?.

In the dataset,

For Survived = 0 means the passenger has not survived.

For Survived = 1 means the passenger has survived.
Output Format:

Print "Yes" if there is a significant difference otherwise print "No".
Here for significant difference, the mean should vary by 2 points at least.

import pandas as pd

#read csv file
df = pd.read_csv('titanic.csv')

#group by Survived and calculate mean of Sex
mean_sex = df.groupby('Survived')['Sex'].mean()


#compare mean values and print result
if (mean_sex[0] - mean_sex[1]) >= 2:
    print("Yes")
else:
    print("No")

